# docker-composeのバージョンを指定
version: "3.9"

# db(MySQL),app(Django)のコンテナを作成
services:
  db:
    image: mysql:8
    container_name: engineer_aggregate_host # phpMyAdminサービスのPMA_HOSTSに設定する
    environment:
      MYSQL_ROOT_PASSWORD: ${ROOTPASS}
      MYSQL_DATABASE: ${DATABASE}
      MYSQL_USER: ${USERNAME}
      MYSQL_PASSWORD: ${USERPASS}
      TZ: 'Asia/Tokyo'
      LC_ALL: 'ja_JP.UTF-8'
      LANG: "ja_JP.UTF-8"
#    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
#    volumes:
#      - ./containers/db/data:/var/lib/mysql
#      - ./containers/db/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - ${PORT}:3306
    expose:
      - ${PORT}

  django:
    # コンテナ名をappに設定
    container_name: "chat-gpt-management-fast_api-containers"
    image: 886098428073.dkr.ecr.ap-northeast-1.amazonaws.com/chat-gpt-management-fast_api-image:latest
    # DjangoのDockerfileをビルドする
    build:
      # ビルドコンテキストはカレントディレクトリ
      context: .
      dockerfile: containers/fast_api/local/Dockerfile
    tty: true
    working_dir: /app
    # ボリュームを指定
    # ローカルのカレントディレクトリをコンテナの/codeにマウントする
    # ローカルの/staticをコンテナの/staticにマウントする
#    volumes:
#      - ./python:/app
#      - ./python/static:/static
    # ローカルの8000番ポートとコンテナの8000番ポートをつなぐ
    ports:
      - "8000:8000"
    # シェルスクリプトを実行
#    command: sh -c ./entrypoint.sh
    # 環境変数を.envを使って設定
    env_file:
      - .env.prod
    # 先にdbを起動してからappを起動する
    depends_on:
      - db

  nextjs:
    container_name: "chat-gpt-management-nextjs-containers"
    image: 886098428073.dkr.ecr.ap-northeast-1.amazonaws.com/chat-gpt-management-nextjs-containers:latest
    build:
      context: .
      dockerfile: ./containers/nextjs/local/Dockerfile
    working_dir: /var/www/html
#    volumes:
#      - ./nextjs:/var/www/html
#    tty: true
#    command: "yarn dev"
    env_file:
      - .env
    ports:
      - "3000:3000"

  nginx:
    container_name: "ecs-fargate-nginx-container"
    image: 886098428073.dkr.ecr.ap-northeast-1.amazonaws.com/chat-gpt-management-nginx-image:latest
    build:
      context: .
      dockerfile: ./containers/nginx/env/local/Dockerfile
    working_dir: /var/www/html
#    volumes:
#      - ./containers/nginx/conf.d/local/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - django
      - nextjs

volumes:
  db_data:
  static:
